// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  name         String
  discordId    String @unique // For Discord commands
  listings     Listing[]
  createdAt    DateTime @default(now())
}

model Listing {
  id           String   @id @default(uuid())
  title        String
  description  String
  minPrice     Float
  maxPrice     Float
  condition    String
  user         User     @relation(fields: [userId], references: [id])
  userId       String
  conversations Conversation[]
  createdAt    DateTime @default(now())
  status       String   // e.g., "active", "negotiating", "sold"
}

model Conversation {
  id           String   @id @default(uuid())
  listing      Listing  @relation(fields: [listingId], references: [id])
  listingId    String
  messages     Message[]
  buyerName    String
  buyerId      String @unique // Facebook sender ID - can only have one conversation at a time
  lastActivity DateTime @default(now())
  isClosed     Boolean @default(false)
}

model Message {
  id             String   @id @default(uuid())
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId String
  sender         String   // "buyer" or "bot"
  content        String
  timestamp      DateTime @default(now())
}

model CalendarEvent {
  id           String   @id @default(uuid())
  listingId    String
  eventId      String   // Google Calendar event ID
  scheduledFor DateTime
  createdAt    DateTime @default(now())
}